#!/usr/bin/env bash

# get path where script is running from:
script_path="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"

# backups are written to path in $1 or into script path if empty
backup_path=${1:-"$script_path"}

backup_dest="${backup_path}/$(uname -n)_$(date +%Y%m%d_%H%M)"
#backup_dest="${backup_path}/$(hostname -s)_$(date +%Y%m%d)"
backup_include="${script_path}/backup_include"
backup_exclude="${script_path}/backup_exclude"

echo "Creating backup into $backup_dest"
echo "Backup exclude:"
cat "$backup_exclude"
echo
echo "Backup include:"
cat "$backup_include"
echo

echo -n "Enter passphrase for backup: "
read -s passphrase
echo
echo -n "Enter passphrase again: "
read -s passphrase_verify
echo

# verify phrases
if [ "$passphrase" != "$passphrase_verify" ] ; then
  echo "mismatch, try again"
  exit 1
fi

# tarbal
tar --exclude-from="$backup_exclude" \
  --files-from="$backup_include" \
  -cf "$backup_dest".tar

# encrypt the backup
echo "$passphrase" | gpg -c --pinentry-mode loopback --passphrase-fd 0 "$backup_dest".tar

cat <<EOF
To decrypt, use:
echo <passphrase> | gpg --passphrase-fd 0 --pinentry-mode loopback --output <backup_name>.tar --decrypt <backup_name>.tar.gpg
EOF
