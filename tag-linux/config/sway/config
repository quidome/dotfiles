# -*- mode: Conf;-*-
# My config for sway
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

set $config_path     ~/.config/sway
set $wallpaper_path  ~/Pictures/wallpapers

# Applications
set $term      alacritty
set $menu      wofi
set $lock      'swaylock -f -C ~/.config/swaylock/config'
set $web       browser-chooser
set $files     $term -e ranger # New terminal emulator instance for ranger
set $processes $term -e gotop
set $pass      ~/bin/rofipass
set $ncspot    ncspot

### Appearance
set $wallpaper ~/.config/wallpaper
set $colors    ~/.cache/wal

# set colors (and $wallpaper)
include $config_path/theme/colors-nord
set $good $green
set $bad  $red

default_border none
default_floating_border normal
hide_edge_borders both

# Floating colors       border   background   text          indicator     child border
client.focused          $good    $good        $foreground   $foreground   $good
client.focused_inactive $good    $good        $foreground   $foreground   $good
client.unfocused        $good    $good        $foreground   $foreground   $good
client.urgent           $bad     $bad         $background   $background   $bad

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango: Source Code Pro 10

### Output configuraton
output *    bg    $wallpaper    fill

# laptop screen
output LVDS-1 mode 1280x800@60Hz position 0,0 scale 1.00


### Idle configuration
#
# Example configuration:
#
exec swayidle -w \
         timeout 300 $lock \
         timeout 600 'swaymsg "output * dpms off"'               resume 'swaymsg "output * dpms on"' \
         before-sleep $lock
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec $menu --show run

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    # bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'

#
# My custom binds:
#
    ## Applications
    # Launch firefox chooser
    bindsym $mod+Shift+b exec $web
    # Launch file browser
    bindsym $mod+n exec $files
    # Launch process viewer
    bindsym $mod+t exec $processes
    # Launch menu
    bindsym $mod+p exec $menu --show drun
    # Launch gopass prompt
    bindsym $mod+Shift+p exec $pass
    # Launch command line spotify client
    bindsym $mod+m exec $ncspot

    ## custom power menu
    set $control power
    set $exit swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
    bindsym $mod+Shift+e mode "$control"

    mode "$control" {
        bindsym p exec systemctl poweroff, mode "default"
        bindsym r exec systemctl reboot, mode "default"
        bindsym k exec swaymsg exit, mode "default"
        bindsym l exec $lock, mode "default"
        bindsym s exec systemctl suspend, mode "default"
        bindsym Escape mode "default"
   }

   # include more custom keybindings
   include ~/.config/sway/binds

#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # # switch to workspace
    # bindsym $mod+1 workspace 1
    # bindsym $mod+2 workspace 2
    # bindsym $mod+3 workspace 3
    # bindsym $mod+4 workspace 4
    # bindsym $mod+5 workspace 5
    # bindsym $mod+6 workspace 6
    # bindsym $mod+7 workspace 7
    # bindsym $mod+8 workspace 8
    # bindsym $mod+9 workspace 9
    # bindsym $mod+0 workspace 10
    # # move focused container to workspace
    # bindsym $mod+Shift+1 move container to workspace 1
    # bindsym $mod+Shift+2 move container to workspace 2
    # bindsym $mod+Shift+3 move container to workspace 3
    # bindsym $mod+Shift+4 move container to workspace 4
    # bindsym $mod+Shift+5 move container to workspace 5
    # bindsym $mod+Shift+6 move container to workspace 6
    # bindsym $mod+Shift+7 move container to workspace 7
    # bindsym $mod+Shift+8 move container to workspace 8
    # bindsym $mod+Shift+9 move container to workspace 9
    # bindsym $mod+Shift+0 move container to workspace 10
    # # Note: workspaces can have any name you want, not just numbers.
    # # We just use 1-10 as the default.

    # load custom workspaces definitions replacing ^^^
    include ~/.config/sway/workspaces

#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+backslash move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+backslash scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Placement rules
#
# include my window rules
include ~/.config/sway/rules

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
# bar {
#     position top

#     # When the status_command prints a new line to stdout, swaybar updates.
#     # The default just shows the current date and time.
#     status_command while date +'%Y-%m-%d %l:%M:%S %p'; do sleep 1; done

#     colors {
#         statusline #ffffff
#         background #323232
#         inactive_workspace #32323200 #32323200 #5c5c5c
#     }
# }


# import environment and start required services
exec_always "systemctl --user import-environment; systemctl --user start sway-session.target"
#
### Autostart
#
# Start kanshi output manager
exec_always systemctl --user restart kanshi.service
#exec /usr/bin/kanshmakoi

#
### Include sway package config files
#
include /etc/sway/config.d/*
